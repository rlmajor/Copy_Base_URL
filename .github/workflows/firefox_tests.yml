name: Build and Release - DEV

on:
  push:
    branches:
      - develop
      
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        firefox: ['84.0', 'devedition-84.0b1', 'latest-beta', 'latest-devedition', 'latest-nightly', 'latest-esr', 'latest']
    name: Firefox ${{ matrix.firefox }} sample
    env:
      EXTENSION_NAME: copy_base_url
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '17'

      - name: Install dependencies
        run: npm install

      - name: Generate manifest.json
        run: node generate-manifest.js

      - name: Build addon
        run: npm run build

      - name: Generate version
        id: generate_version
        run: |
          version=$(date +'%Y%m%d%H%M%S')
          echo "Version: $version"
          echo "::set-output name=version::$version"

      - name: Zip and rename bundle.js to bundle.xpi
        run: |
          cd dist
          zip -r ../${{ env.EXTENSION_NAME }}_${{ steps.generate_version.outputs.version }}.xpi ./* -x "*node_modules*" -x "*test*" -x "*coverage*"
          cd ..
          
      - name: List files after zipping
        run: ls -la

      - name: Upload Extension Artifact
        uses: actions/upload-artifact@v2
        with:
          name: firefox-extension
          path: ${{ env.EXTENSION_NAME }}_${{ steps.generate_version.outputs.version }}.xpi

      - name: Set Jest Permissions
        run: chmod +x ./node_modules/.bin/jest

      - name: Run tests
        run: npm test
        continue-on-error: true

      - name: Setup Firefox
        id: setup-firefox
        uses: browser-actions/setup-firefox@v1
        with:
          firefox-version: ${{ matrix.firefox }}

      - name: Setup geckodriver
        run: |
          wget https://github.com/mozilla/geckodriver/releases/download/v0.29.0/geckodriver-v0.29.0-linux64.tar.gz
          tar -xzf geckodriver-v0.29.0-linux64.tar.gz
          sudo mv geckodriver /usr/local/bin/

      # - name: Define XPI Path
      #   id: define_xpi_path
      #   run: |
      #     echo "::set-output name=xpi_path::${{ github.workspace }}/${{ env.EXTENSION_NAME }}_${{ steps.generate_version.outputs.version }}.xpi"
      #   continue-on-error: true

      - name: Run Selenium tests
        run: npm run selenium-test
        env:
          FIREFOX_PATH: ${{ steps.setup-firefox.outputs.firefox-path }}
          XPI_PATH: ${{ steps.define_xpi_path.outputs.xpi_path }}
        continue-on-error: true
        

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Extension Artifact
        uses: actions/download-artifact@v2
        with:
          name: firefox-extension
          path: .

      - name: Extract PR Commit Messages
        id: extract_commits
        run: |
          commits=$(git log --merges -n 1 --pretty=format:"%h" | xargs -I % git log %^..% --pretty=format:"- %s")
          echo "$commits"
          echo "::set-output name=commits::$commits"

      - name: Generate version
        id: generate_version
        run: |
          version=$(date +'%Y%m%d%H%M%S')
          echo "Version: $version"
          echo "::set-output name=version::$version"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.generate_version.outputs.version }}
          release_name: Release ${{ steps.generate_version.outputs.version }}
          body: |
            Changes in this release:
            ${{ steps.extract_commits.outputs.commits }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          EXTENSION_NAME: copy_base_url
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.EXTENSION_NAME }}_${{ steps.generate_version.outputs.version }}.xpi
          asset_name: ${{ env.EXTENSION_NAME }}_${{ steps.generate_version.outputs.version }}.xpi
          asset_content_type: application/zip
